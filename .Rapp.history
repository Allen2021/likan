plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(mobility ~ hetero, data = Angell, span= 0.75, degree = 1)#
heteto = data.frame(hetero = seq(min(Angell$hetero), max(Angell$hetero), length.out = 10))#
ll <- predict(lo, newdata = heteto)#
lines(ll, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(mobility ~ hetero, data = Angell, span= 0.75, degree = 1)#
hetero = seq(min(Angell$hetero), max(Angell$hetero), length.out = 10)#
ll <- predict(lo, newdata = heteto)#
lines(hetero, ll, col = "red")
ll
hetero
lines(x=hetero, y=ll)
?lines
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(mobility ~ hetero, data = Angell, span= 0.75, degree = 1)#
lines(lo)
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1)#
lines(lo)
?loess
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1, control = loess.control(surface = "direct"))#
lines(lo)
lo
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1, control = loess.control(surface = "direct"))#
lines(predict(lo))
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1)#
heteto = data.frame(hetero = seq(min(Angell$hetero), max(Angell$hetero), length.out = 10))#
ll <- predict(lo, newdata = heteto)#
lines(ll, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 10)#
ll <- predict(lo, heteto)
ll
lines(heteto, ll)
lines(ll, col="red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.75, degree = 1)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.2, degree = 1)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.2, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.4, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.5, degree = 3)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.3, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
plot(moral ~ hetero, data = Angell)#
# lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span= 0.4, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
str(Anscombe)
plot(education ~ income, data = Angell)#
lines(lowess(Angell$income, Angell$education, f= 0.2))
plot(education ~ income, data = Anscombe)#
lines(lowess(Anscombe$income, Anscombe$education, f= 0.2))
plot(education ~ young, data = Anscombe)#
lines(lowess(Anscombe$young, Anscombe$education, f= 0.2))
plot(education ~ young, data = Anscombe)#
lines(lowess(Anscombe$young, Anscombe$education, f= 0.1))
plot(education ~ young, data = Anscombe)#
lines(lowess(Anscombe$young, Anscombe$education, f= 0.3))
plot(education ~ young, data = Anscombe)#
lines(lowess(Anscombe$young, Anscombe$education, f= 0.28))
plot(education ~ young, data = Anscombe)#
lines(lowess(Anscombe$young, Anscombe$education, f= 0.3))
with(#
plot(education ~ income)#
lines(lowess(income, education, f= 0.2))#
)
?with
with(Anscombe, {#
plot(education ~ income)#
lines(lowess(income, education, f= 0.2))	#
})
scatterplotMatrix(#
~ education + income + young + urban, data = Anscombe, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)
str(Chirot)
ncols(Chirot)
colnames(Chirot)
eval(colnames(Chirot))
formula(colnames(Chirot))
xx<-formula(colnames(Chirot))
xx
paste(colnames(Chirot))
paste(colnames(Chirot), sep = "+")
?colnames
x<-colnames(Chirot)
str(x)
as.vector(x)
x<-as.vector(x)
str(x)
length(x)
?paste
paste(x, sep="=")
paste(x[1:5], sep="=")
paste(x, sep ="+", collapse = "")
paste(x, sep = "+", collapse = "")
paste(x, sep = "+", collapse = "+")
paste(x, collapse = "+")
paste(x, collapse = " + ")
colnames(data)
data <- Anscombe
colnames(data)
scm <- function(data){#
scatterplotMatrix(#
~ paste(x, collapse = " + "), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}
scm(Anscombe)
scm <- function(data){#
scatterplotMatrix(#
~ eval(paste(x, collapse = " + ")), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}
scm(Anscombe)
scm <- function(data){#
scatterplotMatrix(#
~ eval(paste(data, collapse = " + ")), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}
scm(Anscombe)
eval(paste(data, collapse = " + "))
data
scm <- function(data){#
scatterplotMatrix(#
~ eval(paste(colnames(data), collapse = " + ")), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}
scm(Anscombe)
scm <- function(data){#
scatterplotMatrix(#
~ paste(colnames(data), collapse = " + "), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}#
scm(Anscombe)
as.formula(paste(colnames(data), collapse = " + "))
scm <- function(data){#
scatterplotMatrix(#
~ as.formula(paste(colnames(data), collapse = " + ")), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}#
scm(Anscombe)
paste(colnames(data), collapse = " + ")
paste("~", paste(colnames(data), collapse = " + "))
as.formula(paste("~", paste(colnames(data), collapse = " + ")))
scm <- function(data){#
scatterplotMatrix(#
  as.formula(paste("~ ", paste(colnames(data), collapse = " + "))), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}#
scm(Anscombe)
scm <- function(data){#
car::scatterplotMatrix(#
  as.formula(paste("~ ", paste(colnames(data), collapse = " + "))), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}#
scm(Anscombe)
data(package="car")
scm(Chirot)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, #
  smooth = TRUE, smoother = loessLine, smoother.args = list(span = 0.5), spread = FALSE,#
  reg.line = lm#
)	#
}#
scm(Chirot)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, #
)	#
}#
scm(Chirot)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, #
)	#
}#
scm(Chirot, spread = F)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, #
)	#
}#
scm(Chirot, spread = F, smooth=F)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, ...#
)	#
}#
scm(Chirot)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, #
)	#
}#
scm(Chirot, spread = F, smooth=F)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), data = data, ...#
)	#
}#
scm(Chirot, spread = F, smooth=F)
scm <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), #
  data = data, ...#
)	#
}#
scm(Chirot)
scatterplotMatrixAll <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), #
  data = data, ...)}#
scm(Chirot)
scatterplotMatrixAll <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), #
  data = data, ...)}#
scm(Chirot, spread = F)
scatterplotMatrixAll <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), #
  data = data, ...)}#
scatterplotMatrixAll(Chirot, spread = F)
scatterplotMatrixAll(Ericksen, spread = F)
scatterplotMatrixAll(Ericksen)
scatterplotMatrix(Ericksen)
?scatterplotMatrix(Ericksen)
scatterplotMatrix(Ericksen)
scatterplotMatrixAll <- function(data, ...){#
car::scatterplotMatrix(#
  as.formula(paste("~", paste(colnames(data), collapse = " + "))), #
  data = data, ...)}#
scatterplotMatrix(Chirot, spread = F)
scatterplotMatrix(Leinhardt, spread = F)
scatterplotMatrix(States, spread = F)
scatterplotMatrix(UnitedNations, spread = F)
scatterplotMatrix(Freedman, spread = F)
scatterplotMatrix(Ericksen, spread = F)
scatterplotMatrix(Angell)
plot(moral ~ hetero, data = Angell)
plot(moral ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
abline(lo)
plot(moral ~ hetero, data = Angell)#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)
abline(lo)
abline(lm(moral ~ hetero, data = Angell))
plot(moral ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$moral, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ hetero, data = Angell), col = "green")
scatterplotMatrix(Angell)
plot(mobility ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$mobility, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ hetero, data = Angell), col = "green")
plot(mobility ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$mobility, f= 0.2))#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ hetero, data = Angell), col = "green")5
plot(mobility ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$mobility, f= 0.5))#
lo <- loess(moral ~ hetero, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$hetero), max(Angell$hetero), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ hetero, data = Angell), col = "green")
scatterplotMatrix(Angscombe)
scatterplotMatrix(Anscombe)
plot(mobility ~ hetero, data = Angell)#
lines(lowess(Angell$hetero, Angell$mobility, f= 0.5))
scatterplotMatrix(Angell)
plot(hetero ~ moral, data = Angell)#
lines(lowess(Angell$moral, Angell$hetero, f= 0.5))
plot(hetero ~ moral, data = Angell)#
lines(lowess(Angell$moral, Angell$hetero, f= 0.2))#
lo <- loess(hetero ~ moral, data = Angell, span = 0.5, degree = 2)#
moral = seq(min(Angell$moral), max(Angell$moral), length.out = 50)#
predict <- predict(lo, moral)#
lines(moral, predict, col = "red")#
abline(lm(hetero ~ moral, data = Angell), col = "green")
plot(hetero ~ moral, data = Angell)#
lines(lowess(Angell$moral, Angell$hetero, f= 0.5))#
lo <- loess(hetero ~ moral, data = Angell, span = 0.5, degree = 2)#
moral = seq(min(Angell$moral), max(Angell$moral), length.out = 50)#
predict <- predict(lo, moral)#
lines(moral, predict, col = "red")#
abline(lm(hetero ~ moral, data = Angell), col = "green")
plot(hetero ~ moral, data = Angell)#
lines(lowess(Angell$moral, Angell$hetero, f= 0.5))#
lo <- loess(hetero ~ moral, data = Angell, span = 0.5, degree = 1)#
moral = seq(min(Angell$moral), max(Angell$moral), length.out = 50)#
predict <- predict(lo, moral)#
lines(moral, predict, col = "red")#
abline(lm(hetero ~ moral, data = Angell), col = "green")
plot(hetero ~ moral, data = Angell)#
lines(lowess(Angell$moral, Angell$hetero, f= 0.5))#
lo <- loess(hetero ~ moral, data = Angell, span = 0.5, degree = 1)#
moral = seq(min(Angell$moral), max(Angell$moral), length.out = 10)#
predict <- predict(lo, moral)#
lines(moral, predict, col = "red")#
abline(lm(hetero ~ moral, data = Angell), col = "green")
scatterplotMatrix(Angell)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.2))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")#
#
scatterplotMatrix(Angell)#
plot(moral ~ mobility, data = Angell)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.2))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
scatterplotMatrix(Angell)
?scatterplotMatrix(Angell)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.7))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.7))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.7, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.7))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.7, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.7))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
scatterplotMatrix(Angell)
scatterplotMatrix(Anscombe)
scatterplotMatrix(Chirot)
scatterplotMatrix(Freedman)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.2))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 100)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
scatterplotMatrix(Anschombe)
scatterplotMatrix(Anscombe)
plot(urban ~ education, data = Anscombe)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
scatterplotMatrix(Angell)
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.2))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 0.35))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral))#
lo <- loess(moral ~ mobility, data = Angell, span = 0.5, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral))#
lo <- loess(moral ~ mobility, data = Angell, degree = 1)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral))#
lo <- loess(moral ~ mobility, data = Angell, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 1000)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(moral ~ mobility, data = Angell), col = "green")
plot(density(Angell$mobility))
plot(density(Angell$moral))
scatterplotMatrix(Angell)
scatterplotMatrix(Anscombe)
scatterplotMatrix(Chirot)
plot(intensity ~ tradition, data = Chirot)
plot(intensity ~ tradition, data = Chirot)#
lines(lowess(Chirot$tradition, Chirot$intensity, f= 0.5))#
lo <- loess(intensity ~ tradition, data = Chirot, span = 0.5, degree = 2)#
heteto = seq(min(Chirot$tradition), max(Chirot$tradition), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(intensity ~ tradition, data = Chirot), col = "green")
plot(intensity ~ tradition, data = Chirot)#
lines(lowess(Chirot$tradition, Chirot$intensity, f= 0.75))#
lo <- loess(intensity ~ tradition, data = Chirot, span = 0.75, degree = 2)#
heteto = seq(min(Chirot$tradition), max(Chirot$tradition), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(intensity ~ tradition, data = Chirot), col = "green")
plot(intensity ~ tradition, data = Chirot)#
lines(lowess(Chirot$tradition, Chirot$intensity, f= 0.75))#
lo <- loess(intensity ~ tradition, data = Chirot, span = 0.75, degree = 1)#
heteto = seq(min(Chirot$tradition), max(Chirot$tradition), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")#
abline(lm(intensity ~ tradition, data = Chirot), col = "green")
library(tinytex)#
tlmgr_search('/framed.sty')
library(tinytex)#
tlmgr_search('/ctex.sty')
tlmgr_install('ctex')
tlmgr_install('everysel')
tlmgr_search('/ctex.sty')
library(tinytex)#
tlmgr_search('/everysel.sty')
tlmgr_install('everysel')
?plot
car::symbox(~ intensity, data = Chirot)
library(car)
car::symbox(~ intensity, data = Chirot)
car::symbox(~ intensity, data = Chirot, powers = c(-1, -0.5, 0, 0.5, 1))
car::symbox(~ intensity, data = Chirot, powers = c(-1, -0.5, 0, 0.5, 1), trans = basicPower)
car::symbox(~ intensity, data = Chirot)
symbox(~ intensity, data = Chirot)
symbox(~ income, data = Prestige)
table(Chirot$intensity)
car::symbox(~ tradition, data = Chirot)
Chirot
scatterMatrix(Chirot)
scatterplotMatrix(Chirot)
scatterplotMatrix(Angell)
?symbox
Angell
plot(moral ~ mobility, data = Angell)
library(car)#
plot(moral ~ mobility, data = Angell)#
lines(lowess(Angell$mobility, Angell$moral, f= 7.5))#
lo <- loess(moral ~ mobility, data = Angell, span = 7.5, degree = 2)#
heteto = seq(min(Angell$mobility), max(Angell$mobility), length.out = 50)#
predict <- predict(lo, heteto)#
lines(heteto, predict, col = "red")
abline()
?Angell
States
scatterplotMatrix(States)
scatterplotMatrix(Leinhardt)
scatterplotMatrix(Freedman)
scatterplotMatrix(Ericksen)
plot(crime ~ highschool, data = Ericksen)
Angell
Chirot
UniteNations
data()
Titanic
SLID
Cowles
scatterplotMatrix(Blacumore)
scatterplotMatrix(Blackmore)
scatterplotMatrix(Cowles)
scatterplotMatrix(Moore)
scatterplotMatrix(States)
Sahlins
lm(consumers~acres, data = Sahlins)
plot(consumers~acres, data = Sahlins)
ablne(lm(consumers~acres, data = Sahlins))
abline(lm(consumers~acres, data = Sahlins))
Chirot
?Chirot
Burt
str(Burt)
Robey
?Burt
foster
Angell
?Angell
Guyer
Titanic
HS-Powers
?Anova
search()
?search
.packages
?search(.packages)
library()
?gamm4
help(, gamm4)
help(, package="gamm4")
gamm4
library(gamm4)
gamm4
infant.mortality <- UN[, "infant.mortality"] #
hist(x = infant.mortality, col =“red”,#
      breaks = seq(from = 0, to = 170, by = 10),#
      xlab = "Infant Mortality Rate (per 1000)", font.lab = 2, main = "")#
box()
library(car)
infant.mortality <- UN[, "infant.mortality"] #
hist(x = infant.mortality, col =“red”,#
      breaks = seq(from = 0, to = 170, by = 10),#
      xlab = "Infant Mortality Rate (per 1000)", font.lab = 2, main = "")#
box()
infant.mortality <- UN[, "infant.mortality"] #
hist(x = infant.mortality, col ="red",#
      breaks = seq(from = 0, to = 170, by = 10),#
      xlab = "Infant Mortality Rate (per 1000)", font.lab = 2, main = "")#
box()
2.5/6
?plot
options(servr.daemon = TRUE)#
setwd("~/Documents/ADMIN/website/likan")
blogdown::serve_site() #serve site
