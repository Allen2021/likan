score <- as.numeric(data)#
condition <- rep(c("RRR", "RPQ", "RCQ"), each = 6)#
sample <- data.frame(score, condition)
sample
ave(score ~ condition)
?ave
aov(score ~ condition)
res <- aov(score ~ condition)
summary(res)
args(aov)
args(aov.default)
ï¼ŸTukeyHSD
?TukeyHSD
res
TrykeyHSD(res)
TurkeyHSD(res)
res
summary(res)
TurkeyHSD(res)
TukeyHSD(res)
install.packages("agricolae", dependencies=TRUE)
library(agricolae)
update.packages(ask = FALSE, checkBuilt = TRUE)
devtools::install_github('yihui/xaringan')
install.packages("devtools", dependencies = TRUE)
devtools::install_github('yihui/xaringan')
library(rmarkdown)
help(rmarkdown)
help(package=rmarkdown)
x<-1:10
diag(x)
diag(x)<y
diag(x)<-y
x<-diag(rep(1,3))
x
f(x, )<-y
diag(x)<-vars
diag(x)<-var
x
diag(x)
mean(x)
mean(x)<-var
help(package=base)
a <- b <- c <- 6
a
b
c
?eps
y<- 1:10
y
x
diag(x)
diag(y)
diag(x)<-y
y<-4:6
diag(y)
diag(x)<-y
diag(x)
y
diag(y)
diag(x)<-y
y
x
diag(x)
x
x<- 1:3
y<- 4:6
mean(x)
mean(x) <- y
diag(x)
diag(y)
diag(x)
diag(y)
diag(x)<-y
y
x
diag(x)<-diag(y)
y
x
diag(x)<-y
y
diag(x)
diag(x)<-y
mean(x)
mean(y)
diag(x)<-diag(y)
'diag<-'(x, value=y)
x<-'diag<-'(x, value=y)
x<-diag(rep(1,3))
x
rep(1,3)
diag(x)
diag(x)<-y
diag(x)
x
x<-diag(rep(1,3))
mean(x)
x
mean(x)<-3
diag(x)<-7:9
x
diag(x)<-7:90
diag(x)<-7:9
x
help(package=base)
diag(x)
diag(x)[2]
diag(x)[2]<-9
x
diag(x)[2]<-90
x
?diag<-
..
?'diag<-'
x
y
diag(y)
diag(x)<-diag(y)
diag(x)
diag(x)<-y
x
y<-diag(y)
y
diag(x)
diag(y)
diag(y)[2]<-10
y
diag(y)
diag(x)<-diag(y)
x
?.exit()
?.exit
?on.exit
help(package=base)
.Library
f1 <- function(x, y = x)             { x <- x + 1; y }
f1(2)
f1(2,3)
f1(2,4)
f1(2,5)
f1(9)
quote(f1)
quote(f1())
?TukeyHSD
eval(parse(x))
?parse
parse(text = c("A", "B", "C"))
A<- 3
B<-4
C<-5
tt<-parse(text = c("A", "B", "C"))
tt
eval(tt)
?eval
eval(tt)
tt<-parse(text = list("A", "B", "C"))
tt
tt<-parse(text = print("A", "B", "C"))
tt<-parse(text = `print`("A", "B", "C"))
x<-100
eval(parse(text="x"))
y<-1000
z<-9
sapply(c("x", "y", "z"), function(x)eval(parse(text=x)))
sapply(c("x", "y", "z"), function(x)eval(parse(x)))
sapply(c("x", "y", "z"), function(x)eval(parse(text = x)))
eval(parse(text=x))
eval(parse(text=y))
eval(parse(text=z))
eval(parse(text=c("z","y")))
eval(parse(text=data.frame("z","y")))
eval(parse(text=("z","y")))
eval(parse(text=c("z","y")))
eval(parse(text=paste("x", "+", "y")))
parse(text=paste("x", "+", "y"))
eval(parse(text=paste(cc[,1], "+", "y")))
cc
eval(parse(text=paste(cc[,1], "+", "y")))
cc
cc <- c("x", "y", "z")
cc
eval(parse(text=paste(cc[, 1], "+", "y")))
cc[1]
eval(parse(text=paste(cc[1], "+", "y")))
eval(parse(text=paste(cc[1], "+", cc[2])))
eval(parse(text=paste(cc[1], "+", cc[3])))
cc
x
y
z
combn(x = 1:5, m = 3)
combn(x = c("RRR", "RPQ", "RCQ"), m = 2)
tt<-combn(x = c("RRR", "RPQ", "RCQ"), m = 2)
tt <- t(combn(x = c("RRR", "RPQ", "RCQ"), m = 2))
tt
paste(tt[,1], "-", tt[,2])
RRR<-5
RPQ <- 9
RCQ<-10
eval(paste(tt[,1], "-", tt[,2]))
eval(paste(tt[1,1], "-", tt[1, 2]))
eval(parse(text=paste(tt[1,1], "-", tt[1, 2])))
eval(parse(text=paste(tt[,1], "-", tt[, 2])))
eval(parse(text=paste(tt[1,1], "-", tt[1, 2])))
eval(parse(text=paste(tt[2,1], "-", tt[2, 2])))
pp<-paste(tt[,1], "-", tt[,2])
str(pp)
as.data.frame(paste(tt[,1], "-", tt[,2]))
?paste
Mean
score <- c(2, 3,  8,  6,  5,  6,#
           5, 9, 10, 13,  8,  9,#
           8, 6, 12, 11, 11, 12#
   )#
data <- matrix(data = score, #
       nrow = 6, #
       dimnames = list(Number = paste("S", 1:6, sep = ""), #
                       Treatment = c("RRR", "RPQ", "RCQ")                       #
                       )#
   )#
data
score
data
Mean <- apply(data, 2, mean)
Mean
str(mean)
str(Mean)
names(Mean)
score <- c(2, 3,  8,  6,  5,  6,#
           5, 9, 10, 13,  8,  9,#
           8, 6, 12, 11, 11, 12#
   )#
data <- matrix(data = score, #
       nrow = 6, #
       dimnames = list(Number = paste("S", 1:6, sep = ""), #
                       Treatment = c("RRR", "RPQ", "RCQ")                       #
                       )#
   )#
data
data
Mean <- apply(data, 2, mean)
Mean
expand.grid(Mean, Mean)
Mean[1]
Mean[names(Mean)=="RRR"]
RRR <- Mean[names(Mean)=="RRR"]
RRR
RPQ <- Mean[names(Mean)=="RPQ"]
RPQ
RCQ <- Mean[names(Mean)=="RCQ"]
RCQ
diff(Mean)
combn(1:3, 2)
combn(1:3, 2)[1,]
combn(1:3, 2)[1,] - combn(1:3, 2)[2,]
Mean
str(Mean)
Mean$RRR
Mean$$RRR
Mean$RRR
Mean[names(Mean) = "RRR"]
Mean[names(Mean) == "RRR"]
Mean
combn(Mean, 2)
library(agricolae)
?sheffe.test
?scheffe.test
?commandArgs
?sprintf
sprintf("%f", pi)
options(servr.daemon = TRUE)#
setwd("~/website/hugo")
blogdown::new_post("inferring-personal-economic-status-from-social-network-location")
